name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Verify index.html exists
        id: check
        run: |
          if [ ! -f "rpg-game/index.html" ]; then
            echo "::error::index.html not found at rpg-game/index.html"
            echo "Contents of rpg-game directory:"
            ls -la rpg-game/
            exit 1
          fi
          echo "Found index.html at rpg-game/index.html"

  build:
    needs: verify
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare site root
        run: |
          # Create _site directory and copy ONLY from rpg-game
          mkdir -p _site
          echo "Copying contents from rpg-game to _site"
          cp -rv rpg-game/* _site/
          
          if [ ! -f "_site/index.html" ]; then
            echo "::error::Failed to copy index.html from rpg-game"
            exit 1
          fi
          
          echo "Contents of _site directory:"
          ls -la _site/
          
      - name: Upload artifact with retries
        uses: actions/upload-pages-artifact@v3
        id: upload
        with:
          path: '_site'
          retention-days: 1
          
      - name: Verify artifact upload
        if: always()
        run: |
          if [ "${{ steps.upload.outcome }}" != "success" ]; then
            echo "::error::Artifact upload failed!"
            exit 1
          fi
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        timeout-minutes: 10
        
      - name: Verify deployment
        if: always()
        run: |
          if [ "${{ steps.deployment.outcome }}" != "success" ]; then
            echo "::error::Deployment failed!"
            exit 1
          fi 