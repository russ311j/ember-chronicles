name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Debug Directory Structure
        run: |
          echo "Current directory: $(pwd)"
          echo "List workspace root:"
          ls -la
          echo "List rpg-game directory:"
          ls -la rpg-game/
          echo "Checking for index.html:"
          find . -name "index.html"
      
      - name: Verify index.html exists
        id: check
        run: |
          # Use absolute path to be certain
          WORKSPACE="${GITHUB_WORKSPACE}"
          INDEX_PATH="${WORKSPACE}/rpg-game/index.html"
          
          echo "Checking for index.html at: $INDEX_PATH"
          
          if [ ! -f "$INDEX_PATH" ]; then
            echo "::error::index.html not found at $INDEX_PATH"
            echo "Contents of rpg-game directory:"
            ls -la "${WORKSPACE}/rpg-game/"
            exit 1
          fi
          echo "Found index.html at $INDEX_PATH"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare site root
        run: |
          # Ensure we're in the workspace root
          cd "${GITHUB_WORKSPACE}"
          
          # Create _site directory
          mkdir -p _site
          
          echo "Copying contents from rpg-game to _site"
          cp -rv rpg-game/* _site/
          
          echo "Contents of _site directory:"
          ls -la _site/
          
          if [ ! -f "_site/index.html" ]; then
            echo "::error::Failed to copy index.html from rpg-game"
            echo "Checking source and destination:"
            ls -la rpg-game/
            ls -la _site/
            exit 1
          fi
          
      # Using v3 of upload-artifact which is more stable for this use case
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: _site
          if-no-files-found: error
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        timeout-minutes: 10

  verify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Verify Deployment
        run: |
          # Wait for deployment to propagate
          sleep 30
          
          # Try to access the site
          SITE_URL="${{ needs.build.outputs.page_url }}"
          echo "Checking site at: $SITE_URL"
          
          for i in {1..3}; do
            if curl -sSf "$SITE_URL" > /dev/null; then
              echo "Site is accessible!"
              exit 0
            fi
            echo "Attempt $i failed, waiting 10 seconds..."
            sleep 10
          done
          
          echo "::error::Site is not accessible after 3 attempts"
          exit 1 