name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Pre-check job to verify files exist and validate structure
  verify:
    runs-on: ubuntu-latest
    outputs:
      files_exist: ${{ steps.check.outputs.files_exist }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "RPG game directory contents:"
          ls -la rpg-game/
          
      - name: Check if files exist
        id: check
        shell: bash
        run: |
          # First verify rpg-game directory exists
          if [ ! -d "rpg-game" ]; then
            echo "::error::Directory rpg-game not found!"
            exit 1
          fi
          
          # List contents to debug
          echo "Contents of rpg-game directory:"
          ls -la rpg-game/
          
          # Check for index.html
          if [ -f "rpg-game/index.html" ]; then
            echo "Found index.html"
            echo "files_exist=true" >> $GITHUB_OUTPUT
          else
            echo "::error::index.html not found at rpg-game/index.html"
            exit 1
          fi

  build:
    needs: verify
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
        
      - name: Prepare site root
        id: prepare
        run: |
          mkdir -p _site
          cp -rv rpg-game/* _site/
          echo "Contents of _site directory:"
          ls -la _site/
          if [ ! -f "_site/index.html" ]; then
            echo "::error::Failed to copy index.html to _site"
            exit 1
          fi
          
      - name: Upload artifact
        id: upload
        uses: actions/upload-pages-artifact@v3
        continue-on-error: true
        with:
          path: '_site'
          retention-days: 1
          
      - name: Retry upload on failure
        if: steps.upload.outcome == 'failure'
        run: |
          echo "First upload attempt failed, waiting 10 seconds before retry..."
          sleep 10
          for i in {1..3}; do
            echo "Retry attempt $i..."
            if actions/upload-pages-artifact@v3 --path _site --retention-days 1; then
              echo "Upload succeeded on retry $i"
              exit 0
            fi
            echo "Retry $i failed, waiting 10 seconds..."
            sleep 10
          done
          echo "::error::All upload retries failed"
          exit 1
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        timeout-minutes: 10
        
      - name: Verify deployment
        if: always()
        run: |
          if [ "${{ steps.deployment.outcome }}" != "success" ]; then
            echo "::error::Deployment failed! Checking status..."
            
            # Check deployment status
            if curl -s -o /dev/null -w "%{http_code}" ${{ steps.deployment.outputs.page_url }} | grep -q "200"; then
              echo "Site is accessible despite deployment status!"
            else
              echo "::error::Site is not accessible. Deployment failed!"
              exit 1
            fi
          fi
          
      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up temporary files..."
          rm -rf ./.github/tmp || true 