import { External$PostV1VideoToVideoBodyAssets, PostV1VideoToVideoBodyAssets } from "../../../types/post-v1-video-to-video-body-assets";
import { External$PostV1VideoToVideoBodyStyle, PostV1VideoToVideoBodyStyle } from "../../../types/post-v1-video-to-video-body-style";
import * as z from "zod";
/**
 * CreateRequest
 */
export type CreateRequest = {
    /**
     * Provide the assets for video-to-video. For video, The `video_source` field determines whether `video_file_path` or `youtube_url` field is used
     */
    assets: PostV1VideoToVideoBodyAssets;
    /**
     * The end time of the input video in seconds
     */
    endSeconds: number;
    /**
     * Determines whether the resulting video will have the same frame per second as the original video, or half.
     * * `FULL` - the result video will have the same FPS as the input video
     * * `HALF` - the result video will have half the FPS as the input video
     */
    fpsResolution?: ("FULL" | "HALF") | undefined;
    /**
     * The height of the final output video. Must be divisible by 64. The maximum height depends on your subscription. Please refer to our [pricing page](https://magichour.ai/pricing) for more details
     */
    height: number;
    /**
     * The name of video
     */
    name?: string | undefined;
    /**
     * The start time of the input video in seconds
     */
    startSeconds: number;
    style: PostV1VideoToVideoBodyStyle;
    /**
     * The width of the final output video. Must be divisible by 64. The maximum width depends on your subscription. Please refer to our [pricing page](https://magichour.ai/pricing) for more details
     */
    width: number;
};
/**
 * @internal
 * CreateRequest without any key transformation, this is what
 * we expect to come in as network data
 */
export type External$CreateRequest = {
    assets: External$PostV1VideoToVideoBodyAssets;
    end_seconds: number;
    fps_resolution?: ("FULL" | "HALF") | undefined;
    height: number;
    name?: string | undefined;
    start_seconds: number;
    style: External$PostV1VideoToVideoBodyStyle;
    width: number;
};
export declare const Schemas$CreateRequest: {
    in: z.ZodType<CreateRequest, z.ZodTypeDef, unknown>;
    out: z.ZodType<External$CreateRequest, z.ZodTypeDef, CreateRequest>;
};
