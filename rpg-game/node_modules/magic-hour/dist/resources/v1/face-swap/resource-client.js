"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FaceSwapClient = void 0;
const core_1 = require("../../../core");
const post_v1_face_swap_body_1 = require("../../../types/post-v1-face-swap-body");
const post_v1_face_swap_response_1 = require("../../../types/post-v1-face-swap-response");
class FaceSwapClient extends core_1.CoreResourceClient {
    constructor(client) {
        super(client);
    }
    /**
     * Face Swap video
     *
     * Create a Face Swap video. The estimated frame cost is calculated using 30 FPS. This amount is deducted from your account balance when a video is queued. Once the video is complete, the cost will be updated based on the actual number of frames rendered.
     *
     * Get more information about this mode at our [product page](/products/face-swap).
     *
     *
     * POST /v1/face-swap
     */
    create(request, opts) {
        return this._client.makeRequest({
            method: "post",
            path: "/v1/face-swap",
            auth: ["bearerAuth"],
            contentType: "application/json",
            body: post_v1_face_swap_body_1.Schemas$PostV1FaceSwapBody.out.parse(request),
            responseSchema: post_v1_face_swap_response_1.Schemas$PostV1FaceSwapResponse.in,
            opts,
        });
    }
}
exports.FaceSwapClient = FaceSwapClient;
