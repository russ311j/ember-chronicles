import { types } from "../../../index.js";
import { ApiPromise, CoreClient, CoreResourceClient, RequestOptions } from "../../../core";
import * as requests from "../../../resources/v1/image-projects/request-types";
export declare class ImageProjectsClient extends CoreResourceClient {
    constructor(client: CoreClient);
    /**
     * Get image details
     *
     * Get the details of a image project. The `downloads` field will be empty unless the image was successfully rendered.
     *
     * The image can be one of the following status
     * - `draft` - not currently used
     * - `queued` - the job is queued and waiting for a GPU
     * - `rendering` - the generation is in progress
     * - `complete` - the image is successful created
     * - `error` - an error occurred during rendering
     * - `canceled` - image render is canceled by the user
     *
     *
     * GET /v1/image-projects/{id}
     */
    get(request: requests.GetRequest, opts?: RequestOptions): ApiPromise<types.GetV1ImageProjectsIdResponse>;
    /**
     * Delete image
     *
     * Permanently delete the rendered image. This action is not reversible, please be sure before deleting.
     *
     * DELETE /v1/image-projects/{id}
     */
    delete(request: requests.DeleteRequest, opts?: RequestOptions): ApiPromise<null>;
}
