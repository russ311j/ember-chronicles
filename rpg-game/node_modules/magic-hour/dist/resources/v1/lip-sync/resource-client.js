"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LipSyncClient = void 0;
const core_1 = require("../../../core");
const post_v1_lip_sync_body_1 = require("../../../types/post-v1-lip-sync-body");
const post_v1_lip_sync_response_1 = require("../../../types/post-v1-lip-sync-response");
class LipSyncClient extends core_1.CoreResourceClient {
    constructor(client) {
        super(client);
    }
    /**
     * Lip Sync
     *
     * Create a Lip Sync video. The estimated frame cost is calculated using 30 FPS. This amount is deducted from your account balance when a video is queued. Once the video is complete, the cost will be updated based on the actual number of frames rendered.
     *
     * Get more information about this mode at our [product page](/products/lip-sync).
     *
     *
     * POST /v1/lip-sync
     */
    create(request, opts) {
        return this._client.makeRequest({
            method: "post",
            path: "/v1/lip-sync",
            auth: ["bearerAuth"],
            contentType: "application/json",
            body: post_v1_lip_sync_body_1.Schemas$PostV1LipSyncBody.out.parse(request),
            responseSchema: post_v1_lip_sync_response_1.Schemas$PostV1LipSyncResponse.in,
            opts,
        });
    }
}
exports.LipSyncClient = LipSyncClient;
