"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Schemas$PostV1VideoToVideoBodyStyle = void 0;
const core_1 = require("../core");
const z = __importStar(require("zod"));
/**
 * Takes network data, validates it, and transforms keys to match typescript object PostV1VideoToVideoBodyStyle
 */
const SchemaIn$PostV1VideoToVideoBodyStyle = z
    .object({
    art_style: z.enum([
        "3D Render",
        "Airbender",
        "Android",
        "Anime Warrior",
        "Armored Knight",
        "Assassin's Creed",
        "Avatar",
        "Black Spiderman",
        "Boba Fett",
        "Celestial Skin",
        "Clay",
        "Comic",
        "Cyberpunk",
        "Cypher",
        "Dark Fantasy",
        "Dragonball Z",
        "Future Bot",
        "Futuristic Fantasy",
        "GTA",
        "Ghost",
        "Gundam",
        "Hologram",
        "Illustration",
        "Impressionism",
        "Ink",
        "Ink Poster",
        "Jinx",
        "Knight",
        "Lego",
        "Link",
        "Marble",
        "Master Chief",
        "Mech",
        "Minecraft",
        "Naruto",
        "Neon Dream",
        "Oil Painting",
        "On Fire",
        "Origami",
        "Pixel",
        "Power Armor",
        "Power Ranger",
        "Retro Anime",
        "Retro Sci-Fi",
        "Samurai",
        "Samurai Bot",
        "Solid Snake",
        "Spartan",
        "Starfield",
        "Street Fighter",
        "Studio Ghibli",
        "Sub-Zero",
        "The Void",
        "Underwater",
        "Van Gogh",
        "Viking",
        "Watercolor",
        "Wu Kong",
        "Zelda",
    ]),
    model: z.enum([
        "Absolute Reality",
        "Dreamshaper",
        "Flat 2D Anime",
        "default",
    ]),
    prompt: z.string().nullable(),
    prompt_type: z.enum(["append_default", "custom", "default"]),
    version: z.enum(["default", "v1", "v2"]),
})
    .transform((obj) => {
    return (0, core_1.zodTransform)(obj, {
        art_style: "artStyle",
        model: "model",
        prompt: "prompt",
        prompt_type: "promptType",
        version: "version",
    });
});
/**
 * @internal
 * Takes typescript data, validates it, and maps keys to match the expected external object External$PostV1VideoToVideoBodyStyle
 */
const SchemaOut$PostV1VideoToVideoBodyStyle = z
    .object({
    artStyle: z.enum([
        "3D Render",
        "Airbender",
        "Android",
        "Anime Warrior",
        "Armored Knight",
        "Assassin's Creed",
        "Avatar",
        "Black Spiderman",
        "Boba Fett",
        "Celestial Skin",
        "Clay",
        "Comic",
        "Cyberpunk",
        "Cypher",
        "Dark Fantasy",
        "Dragonball Z",
        "Future Bot",
        "Futuristic Fantasy",
        "GTA",
        "Ghost",
        "Gundam",
        "Hologram",
        "Illustration",
        "Impressionism",
        "Ink",
        "Ink Poster",
        "Jinx",
        "Knight",
        "Lego",
        "Link",
        "Marble",
        "Master Chief",
        "Mech",
        "Minecraft",
        "Naruto",
        "Neon Dream",
        "Oil Painting",
        "On Fire",
        "Origami",
        "Pixel",
        "Power Armor",
        "Power Ranger",
        "Retro Anime",
        "Retro Sci-Fi",
        "Samurai",
        "Samurai Bot",
        "Solid Snake",
        "Spartan",
        "Starfield",
        "Street Fighter",
        "Studio Ghibli",
        "Sub-Zero",
        "The Void",
        "Underwater",
        "Van Gogh",
        "Viking",
        "Watercolor",
        "Wu Kong",
        "Zelda",
    ]),
    model: z.enum([
        "Absolute Reality",
        "Dreamshaper",
        "Flat 2D Anime",
        "default",
    ]),
    prompt: z.string().nullable(),
    promptType: z.enum(["append_default", "custom", "default"]),
    version: z.enum(["default", "v1", "v2"]),
})
    .transform((obj) => {
    return (0, core_1.zodTransform)(obj, {
        artStyle: "art_style",
        model: "model",
        prompt: "prompt",
        promptType: "prompt_type",
        version: "version",
    });
});
exports.Schemas$PostV1VideoToVideoBodyStyle = {
    in: SchemaIn$PostV1VideoToVideoBodyStyle,
    out: SchemaOut$PostV1VideoToVideoBodyStyle,
};
